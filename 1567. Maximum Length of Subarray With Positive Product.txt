class Solution {
    public int getMaxLen(int[] nums) {
       int n = nums.length, prev = 0, ans = 0, neg = 0, firstNeg = -1, lastNeg=-1;
        for(int i = 0; i < n; i++){
            if(nums[i]>0){
                nums[i] =1;
            }else if(nums[i] < 0){
                nums[i] = -1;
                neg++;
                if(firstNeg == -1){
                    firstNeg = i;
                }
                lastNeg = i;
            }else{
                ans = Math.max(ans, solve(prev, i-1, neg, firstNeg, lastNeg));
                prev = i + 1;
                neg = 0;
                firstNeg = lastNeg = -1;
            } 
        }
        ans = Math.max(solve(prev, n-1, neg, firstNeg, lastNeg), ans);
        return ans;
    }
    public int solve(int l, int r, int neg, int firstNeg, int lastNeg)
    {
        if(l  > r){
            return 0;
        }
        if(neg % 2 == 0){
            return (r-l) +1;
        }
        return Math.max(lastNeg - l, r - firstNeg );
    }    
}