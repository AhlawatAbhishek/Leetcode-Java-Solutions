class Compare
{
public:
    bool operator()(pair<int,int>  a, pair<int,int>  b)
    {
        return a.first>b.first;
    }
};
class Solution {
public:
    int findMaximizedCapital(int k, int w, vector<int>& profits, vector<int>& capital) {
        int size = profits.size();
        priority_queue<pair<int, int>, vector<pair<int, int>>, Compare> cap;
        priority_queue<int> prof;
        for(int indx = 0; indx<size; indx++){
            cap.push(make_pair(capital[indx], profits[indx]));
        }
        cout<<"cap.top().first: "<<cap.top().first<<endl;
        while(k -- > 0){
            while(!cap.empty() && cap.top().first <= w){
                prof.push(cap.top().second);
                cap.pop();
            }
            if(prof.empty()){
                cout<<"prof empty: "<<w<<endl;
                break;
            }
            w += prof.top();
            prof.pop();
        }
        return w;
    }
};
