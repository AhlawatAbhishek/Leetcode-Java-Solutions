class Solution {
public:
    int numRescueBoats(vector<int>& people, int limit) {
        sort(people.begin(), people.end());
        int left = 0, right = people.size()-1, boats = 0;
        int inBoat = 0;
        while(left<right){
            inBoat = people[right];
             if(left < right && people[left] + inBoat <= limit){
                 inBoat += people[left];
                 left++;
             }
             right--;
             boats++;
        }
        return left > right ? boats : boats+1;
    }
};
--------------------------------------------
class Solution {
    public int numRescueBoats(int[] people, int limit) {
        Arrays.sort(people);
        int left = 0, right = people.length-1, boats = 0;
        int inBoat = 0;
        while(left<right){
            inBoat = people[right];
             if(left < right && people[left] + inBoat <= limit){
                 inBoat += people[left];
                 left++;
             }
             right--;
             boats++;
        }
        return left > right ? boats : boats+1;
    }
}
----------------------------------------------------------
class Solution {
    public int numRescueBoats(int[] people, int limit) {
        int l = 0;
        int r = people.length-1, boats =0;
        Arrays.sort(people);
        while(l<=r){
            if(people[l] + people[r] <=  limit){
                l++;
            }
            r--;
            boats++;
        }
        return boats;
    }
}
