/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    ArrayList<Integer> list = new ArrayList<>();
    HashMap<Integer, Integer> hmap = new HashMap<>();
    public TreeNode convertBST(TreeNode root) {        
        inOrder(root);
        for(int i = 0; i<list.size(); i++){
            hmap.put(list.get(i), i);
        }
        inOrderChanger(root);
        return root;
    }
    public void inOrderChanger(TreeNode root){
        if(root == null){
            return;
        }
        inOrderChanger(root.left);
        int index = (int)hmap.get(root.val);
        int sum =0;
        for(int i = index; i<list.size(); i++){
            sum += list.get(i);
        }
        root.val = sum;
        inOrderChanger(root.right);
    }
    public void inOrder(TreeNode root){
        if(root == null){
            return;
        }
        inOrder(root.left);
        list.add(root.val);
        inOrder(root.right);
    }
}