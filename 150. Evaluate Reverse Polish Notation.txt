class Solution {
    public int evalRPN(String[] tokens) {
        if(tokens.length == 1){
            if(isNum(tokens[0])){
                return Integer.parseInt(tokens[0]);
            }else{
                return 0;
            }
        }
        Stack<Integer> st = new Stack<>();
        for(String s : tokens){
            if(isNum(s)){
                st.push(Integer.parseInt(s));
            }else{            
                  int x = st.pop(), y = st.pop() ,res =0;                    
                        if(s.equals("+")) 
                            res = y+x;
                        else if(s.equals("-"))
                            res = y-x;
                        else if(s.equals("*")) 
                            res = y * x;
                        else if(s.equals("/"))
                            res = y / x;
                    // switch(s){
                    //     case "+" : 
                    //         res = y+x;
                    //         break;
                    //     case "-":
                    //         res = y-x;
                    //         break;
                    //     case "*": 
                    //         res = y * x;
                    //         break;
                    //     case "/":
                    //         res = y / x;
                    //         break;
                    // }
                 st.push(res);
            }
        }
        int result = 0;
        if(st.size() == 1) result = st.pop();
        return  result;
    }
    public boolean isNum(String s){
        try{
            int x = Integer.parseInt(s);
        }catch(Exception e){
            return false;
        }
        return true;
    }
}
-------------------------------------------------------

class Solution {
    // TC  : O(n)

    public int evalRPN(String[] tokens) {
        Stack<String> st = new Stack<>();

        for(String el: tokens){
            if(isOperator(el)){

                int el2 = Integer.parseInt(st.pop());
                int el1 = Integer.parseInt(st.pop());
                int ans = 0;

                if(el.equals("*")){
                    ans = el1 *el2;
                } else if(el.equals("/")){
                    ans = el1/el2;
                }else if(el.equals("+")){
                    ans = el1 +el2;
                }else if(el.equals("-")){
                    ans = el1 -el2;
                }
                st.push(ans+"");
            } else {
                // operand
                st.push(el);
            }
        }

        return Integer.parseInt(st.peek());
    }

    private boolean isOperator(String el){
        if(el.equals("*") || el.equals("+") || el.equals("-") || el.equals("/")){
            return true;
        } else {
            return false;
        }
    }
}