class Solution {
    public int[] nextGreaterElements(int[] arr) {
        int n = arr.length;
       int []stack = new int[n*2];
        int res[] = new int[n];
        Arrays.fill(res, -1);
        int top = -1;
        for(int indx = 0; indx<stack.length; indx++){
           while(top > -1 && arr[stack[top]] < arr[indx%n]){
               res[stack[top--]] = arr[indx%n];
           }
            stack[++top] = indx % n;
        }
        return res;
    }
}
-----------------
class Solution {
    public int[] nextGreaterElements(int[] nums) {
        Stack<Integer> st = new Stack<>();
        int n = nums.length;
        int result[] = new int[n];
        Arrays.fill(result, -1);
        for(int indx = 0; indx<2*n; indx++){
            while(!st.isEmpty() && nums[st.peek()] < nums[indx%n]){
                result[st.pop()] = nums[indx%n];
            }
            if(indx < n){
                st.push(indx);
            }
        }
        return result;
    }
}