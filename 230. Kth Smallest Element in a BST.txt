/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int kthSmallest(TreeNode root, int k) {
        List<Integer> al = new ArrayList<>();
        preOrder(root, al);
        int ans = Integer.MIN_VALUE;
        Collections.sort(al);
        for(int i = 0; i< al.size()&&k>0; i++, k--){
            ans = al.get(i);
        }
        return ans;
    }
    public void preOrder(TreeNode node,List<Integer> al){
        if(node == null){
            return;
        }
        al.add(node.val);
        preOrder(node.left,  al);
        
        preOrder(node.right, al);
    }
}