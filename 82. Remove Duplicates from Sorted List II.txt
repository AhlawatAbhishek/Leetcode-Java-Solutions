/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head == null){
            return null;
        }
        if(head.next == null){
            return head;
        }
       ListNode prev = null;
       ListNode temp = head; 
        while(temp.next != null){
            if(temp.val == temp.next.val){ 
                int value = temp.val;
             while(temp.val == value){
                 temp = temp.next;
                 if(temp == null && prev == null){
                     return null;
                 }else if(temp == null){
                     prev.next = null;
                     return head;
                 }
             }   
                if(prev == null){
                    head = temp;
                }else{
                    prev.next = temp;
                }
            }else{
              prev = temp;
                temp = temp.next;
            }
        }
        return head;
    }
}