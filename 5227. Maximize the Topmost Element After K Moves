class Solution {
    public int maximumTop(int[] nums, int k) {
        int n = nums.length;
        if(n == 1){
            return k % 2 == 1 ? -1 : nums[0];
        }
        int max = 0;
        for(int i = 0;i < n;i++){
            if(k == i || k >= i+2){
                max = Math.max(max, nums[i]);
            }
        }
        return max;
    }
}
class Solution {
    public int maximumTop(int[] nums, int k) {
        int len = nums.length;
        if(k == 0)return nums[0];
        if(len == 1){
           if(k % 2 != 0){
               return -1;
           }else{
               return nums[0];
           } 
        }
        if(k <= len){
            int max = Integer.MIN_VALUE, indx = 0;
            while(k -- > 1){
                max = Math.max(max, nums[indx++]);
            }
            
            if(indx+1 < len && nums[indx+1] > max){
               return nums[indx+1];
            }
            return max;
        }else{
            int max = Integer.MIN_VALUE;
            for(int num : nums){
                max = Math.max(max, num);
            }
            return max;
        }
    }
}
