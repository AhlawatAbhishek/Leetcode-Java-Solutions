--------------c++----------------------
class Solution {
public:
    bool checkInclusion(string s1, string s2) {
         if(s2.length() < s1.length()) return false;
         vector<int> chrs(26, 0);
        for(auto c : s1){
            chrs[c-'a']++;
        }
        int left = 0, right = 0, snakeLen = s1.length();
        while(right < s2.length()){
            int currCh = (int)(s2[right] - 'a');
            if(chrs[currCh]-- > 0){
                snakeLen--;
            }
            if(snakeLen == 0) return true;
            if(right-left + 1 == s1.length() && chrs[s2[left++] -'a']++>=0){
                snakeLen++;
            }
            right++;
        }
        return false;
    }
};
--------------------------java------------------------
class Solution {
    public boolean checkInclusion(String s1, String s2) {
        if(s2.length() < s1.length()) return false;
        int chrs[] = new int[26];
        for(char c : s1.toCharArray()){
            chrs[c-'a']++;
        }
        int left = 0, right = 0, snakeLen = s1.length();
        while(right < s2.length()){
            int currCh = (int)(s2.charAt(right) - 'a');
            if(chrs[currCh]-- > 0){
                snakeLen--;
            }
            if(snakeLen == 0) return true;
            if(right-left + 1 == s1.length() && chrs[s2.charAt(left++) -'a']++>=0){
                snakeLen++;
            }
            right++;
        }
        return false;
    }
}