class NumMatrix {
    int mat[][] = null;
    public NumMatrix(int[][] matrix) {
        
        for(int i = 0; i<matrix.length; i++){
            for(int j = 1; j<matrix[i].length; j++){
                matrix[i][j] += matrix[i][j-1];
            }
        }
        for(int i = 1; i<matrix.length; i++){
            for(int j = 0; j<matrix[i].length; j++){
                matrix[i][j] += matrix[i-1][j];
            }
        }
        this.mat = matrix;
    }
    public int sumRegion(int row1, int col1, int row2, int col2) {
       int target = this.mat[row2][col2];
       int extra = ((row1 != 0) ? mat[row1-1][col2] : 0) + ((col1 != 0) ? mat[row2][col1-1] : 0) - ((row1 != 0 && col1 != 0) ? mat[row1-1][col1-1] : 0);
        return target - extra;
    }
}

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix obj = new NumMatrix(matrix);
 * int param_1 = obj.sumRegion(row1,col1,row2,col2);
 */
-------------------------------
It gives tle----------------
class NumMatrix {
    int mat[][] = null;
    public NumMatrix(int[][] matrix) {
        mat = new int[matrix.length][matrix[0].length];
        for(int i = 0; i<mat.length; i++){
            for(int j = 0; j<mat[i].length; j++){
                mat[i][j] = matrix[i][j];
            }
        }
    }
    
    public int sumRegion(int row1, int col1, int row2, int col2) {
        int sum = 0;
        for(int r = row1 ; r<= row2; r++){
            for(int c = col1; c <= col2; c++){
                sum += this.mat[r][c]; 
            }
        }
        return sum;
    }
}

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix obj = new NumMatrix(matrix);
 * int param_1 = obj.sumRegion(row1,col1,row2,col2);
 */