class Solution {
    public int search(int[] nums, int target) {
        int left = 0, right = nums.length-1;
        while(left <= right){
            int mid = left+(right - left)/2;
            if(nums[mid] == target) return mid;
            else if(nums[mid] < target) left = mid + 1;
            else right = mid -1;
        }
        return -1;
    }
}
----------------------------------------------------------
class Solution {
    public int search(int[] nums, int target) {
        int lo = 0, hi = nums.length-1;
        while(lo<=hi){
            int mid = (lo+hi)/2;
            if(nums[mid] > target){
                hi = mid -1;
            }else if(nums[mid]<target){
                lo = mid + 1;
            }else if(nums[mid] == target){
                return mid;
            }            
        }
        return -1;
    }
}
-------------------------------------------------------------
class Solution {
public:
    int search(vector<int>& nums, int target) {
        int left = 0, right = nums.size()-1;
        while(left <= right){
            int mid = left+(right - left)/2;
            if(nums[mid] == target) return mid;
            else if(nums[mid] < target) left = mid + 1;
            else right = mid -1;
        }
        return -1;
    }
};
