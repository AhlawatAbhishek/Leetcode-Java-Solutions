class Solution {
    public int maxOperations(int[] nums, int k) {
  
        HashMap<Integer, Integer> set = new HashMap<>();
        for(int i : nums){
            set.put(i, set.getOrDefault(i, 0)+1);
        }
        int ops = 0;
        for(int i : nums){
           if(set.containsKey(k - i) && set.get(i)  >0 && set.get(k - i) > 0){
               set.replace(i, set.get(i)  -1 );
               if(set.get(k - i) > 0){
                   set.replace(k-i, set.get(k - i)  -1 );
                   ops++;
               }    
           }
        }
        return ops;
    }
}
-------------------------
class Solution {
    public int maxOperations(int[] nums, int k) {
        int cnt = 0;
        Arrays.sort(nums);
        int len = nums.length, left = 0, right = len-1;
        while(left < right){
            int sum = nums[left] + nums[right];
            if(sum < k){
                left++;
            }else if(sum > k){
                right--;
            }else{
                cnt++;
                left++;
                right--;
            }
        }
        return cnt;
    }
}
