class MyCalendar {
    ArrayList<int[]> li= null;
    public MyCalendar() {
        li = new ArrayList<>();
    }
    
    public boolean book(int start, int end) {
        if(li.size() == 0){
            li.add(new int[]{start, end});
            return true;
        }else{
            boolean isPresent = false;
            for(int i[] : li){
                if((i[0] <= start && i[1] > start) || (i[0] > start && i[0] < end)){
                    isPresent = true;
                    break;
                }
            }
            if(isPresent){
                return false;
            }else{
                 li.add(new int[]{start, end});
                 return true;
            }
        }
    }
}
-----------------------------------
class MyCalendar {
    TreeMap<Integer, Integer> map= null;
    public MyCalendar() {
        map = new TreeMap<>();
    }
    
    public boolean book(int start, int end) {
       if(map.ceilingEntry(start)!= null && end > map.ceilingEntry(start).getKey()){
           return false;
       }
       if(map.floorEntry(start) != null && start < map.floorEntry(start).getValue()){
           return false;
       } 
        map.put(start, end);
        return true;
    }
}

