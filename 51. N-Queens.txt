class Solution {
    List<List<String>> res = new ArrayList<>();
    public List<List<String>> solveNQueens(int n) {
        int board[][] = new int[n][n];
        solveBoard(board);
        return res;
    }
    public void solveBoard(int [][]board){
        solveRec(board, 0);
    }
    public boolean solveRec(int[][]board, int col){
       if(col == board[0].length){
           addToRes(board);
           return true;
       }
       for(int row = 0; row<board.length; row++){
           if(isSafe(board, row, col)){
               board[row][col] = 1;
               solveRec(board, col+1);               
               
               board[row][col] = 0;
           }
       } 
       return false; 
    }        

    public boolean isSafe(int [][] board, int row, int col){
       for(int i = 0; i<col; i++){
           if(board[row][i] == 1){
               return false;
           }
       }
       for(int i = row, j = col; i >=0 && j >= 0; i--, j--){
           if(board[i][j] == 1){
               return false;
           }
       } 
       for(int i = row, j = col; j>= 0 && i < board.length; i++, j--){
           if(board[i][j] == 1){
               return false;
           }
       } 
       return true; 
    }
    public void addToRes(int [][]board){
        List<String> s = new ArrayList<>();
        for(int i[] : board){
            StringBuilder sb = new StringBuilder();
            for(int j : i){
                if(j == 1){
                    sb.append("Q");
                }else{
                    sb.append(".");
                }
            }
            s.add(sb.toString());
        }
        res.add(s);
    }
}