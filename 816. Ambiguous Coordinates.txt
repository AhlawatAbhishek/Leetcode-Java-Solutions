class Solution {
    List<String> list = new ArrayList<>();
    public List<String> ambiguousCoordinates(String s) {
        String str = s.substring(1, s.length()-1);
        for(int i = 1; i<str.length(); i++){
            helper(str.substring(0, i), str.substring(i));
        }
        return list;
    }
    public void helper(String s1, String s2){
        List<String> dotx = putDot(s1);
        List<String> doty = putDot(s2);
        for(String x : dotx){
            if(isValid(x)){
                for(String y : doty){
                    if(isValid(y)){
                        list.add(("(" + x+", " +y+")"));
                    }
                }
            }
        }
    }
    public List<String> putDot(String s){
        List<String> res = new ArrayList<>();
        res.add(s);
        for(int i = 1; i<s.length(); i++){
            res.add((s.substring(0, i) + "."+s.substring(i)));
        }
        return res;
    }
    public boolean isValid(String s){
        if(s.contains(".")){
            String p[] =  s.split("\\.");
            if(!p[0].equals("0") && p[0].startsWith("0"))
                return false;
            else 
                return !p[1].endsWith("0");
        }else{
            if(s.equals("0"))
                return true;
            else 
                return !s.startsWith("0");
        }
    }
}