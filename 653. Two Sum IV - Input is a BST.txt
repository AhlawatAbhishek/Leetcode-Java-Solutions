/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
     HashSet<Integer> set = new HashSet<>();
    public boolean findTarget(TreeNode root, int k) {
        return pairExists(root, k);
    }
    private boolean pairExists(TreeNode root, int k){
        if(root == null) return false;
        boolean doesExist = set.contains(k-root.val);
         set.add(root.val);
        doesExist = doesExist ||  pairExists(root.left, k) || pairExists(root.right, k);
        return doesExist;
    }
}