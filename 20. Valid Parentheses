class Solution {
public:
    bool isValid(string s) {
        stack<char> st;
        for(auto ch : s){
            if(ch == '(' || ch == '{' || ch == '['){
                st.push(ch);
            }else{
                if(ch == ')'){
                    if(st.empty()){
                        return false;
                    }else if(st.top() != '('){
                        return false;
                    }
                    st.pop();
                }else if(ch == ']'){
                    if(st.empty()){
                        return false;
                    }else if(st.top() != '['){
                        return false;
                    }
                    st.pop();
                }else{
                    if(st.empty()){
                        return false;
                    }else if(st.top() != '{'){
                        return false;
                    }
                    st.pop();
                }
            }
        }
        return st.empty();
    }
};
-------------------------------------------------------
class Solution {
    public boolean isValid(String s) {
        Deque<Character> st = new ArrayDeque<>();
        for(var ch : s.toCharArray()){
            if(ch == '(' || ch == '{' || ch == '['){
                st.offerLast(ch);
            }else{
                if(ch == ')'){
                    if(st.isEmpty()){
                        return false;
                    }else if(st.peekLast() != '('){
                        return false;
                    }
                    st.pollLast();
                }else if(ch == ']'){
                    if(st.isEmpty()){
                        return false;
                    }else if(st.peekLast() != '['){
                        return false;
                    }
                    st.pollLast();
                }else{
                    if(st.isEmpty()){
                        return false;
                    }else if(st.peekLast() != '{'){
                        return false;
                    }
                    st.pollLast();
                }
            }
        }
        return st.isEmpty();
    }
}
