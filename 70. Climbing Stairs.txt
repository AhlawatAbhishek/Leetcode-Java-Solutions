// Time complexity: O(n)
// Space complexity: O(n)
class Solution {
    public int climbStairs(int n) {
        if(n == 1) return 1;
         int stairs[] = new int[n+1];
//         to climb 0 stairs there is one way i.e. donot climb at all :)
        stairs[0] = 1;
//         for first there is only one way, i.e. climb only one stair
        stairs[1] = 1;
        for(int indx = 2; indx<= n; indx++){
//     present stair can be achieved either from one previous or two previous stairs.
            stairs[indx] = stairs[indx-1] + stairs[indx-2];
        }
        // return the nth stairs
        return stairs[n];
    }
}