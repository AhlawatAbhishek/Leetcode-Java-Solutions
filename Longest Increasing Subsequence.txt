class Solution {
    public int lengthOfLIS(int[] nums) {
        if(nums.length == 0 || nums == null){
            return 0;
        }
        if(nums.length == 1){
            return 1;
        }
        int dp[] = new int[nums.length];
        Arrays.fill(dp ,1);
        int res = 0;
        for(int i = 0 ; i< nums.length; i++){
          for(int j = 0 ; j< i; j++){
              if(nums[j] < nums[i]){
                  dp[i] = Math.max(dp[i], dp[j]  + 1);
              }
          }
            res = Math.max(res, dp[i]);
        }
        return res;
    }
}
-----------------
class Solution {
    public int lengthOfLIS(int[] nums) {
        if(nums.length == 0 || nums == null){
            return 0;
        }
        if(nums.length == 1){
            return 1;
        }
        int dp[] = new int[nums.length];
        int len = 0;
        for(int num : nums){
            int index = Arrays.binarySearch(dp, 0, len, num);
            if(index < 0){
                index = -(index + 1);
            }
            dp[index] = num;
            if(index == len){
                len++;
            }
        }
        return len;
    }
}