class Solution {
    int memo[][][];
    public int findMaxForm(String[] strs, int m, int n) {
        memo = new int[m+1][n+1][strs.length+1];
       int [][]strsArr = new int[strs.length][2];
       int index = 0;
        for(String s : strs){
           generateArr(s, strsArr, index);
            index++;
       }
        return maxSubset(strsArr, m, n, 0);
    }
    
    public void generateArr(String s, int arr[][], int index){       
            for(char c : s.toCharArray()){
                if(c== '0'){
                    arr[index][0]++;
                }else if(c == '1'){
                    arr[index][1]++;
                }
            }
     
    }
    
    public int maxSubset(int [][] strsArr, int m, int n, int index){
        if(m+n <= 0 || index >= strsArr.length){
            return 0;
        }
        if(memo[m][n][index] != 0){
            return memo[m][n][index];
        }
        int res = 0;
        if(strsArr[index][0] <= m  && strsArr[index][1] <= n){
            res = 1+ maxSubset(strsArr, m - strsArr[index][0], n -strsArr[index][1], index+1);
        }
        res = Math.max(res, maxSubset(strsArr, m, n, index+1));
        return memo[m][n][index] = res;
    }
}
------------------------------------
class Solution {
 
    public int findMaxForm(String[] strs, int m, int n) {
       int [][]strsArr = new int[strs.length][2];
         int dp[][] = new int[m+1][n+1];
       int index = 0;
       for(String s : strs){
           generateArr(s, strsArr, index);
            index++;
       }
       for(int i = 0; i<strsArr.length; i++){
           int zeroFreq = strsArr[i][0];
           int oneFreq = strsArr[i][1];
           for(int j = m; j>= zeroFreq; j--){
               for(int k = n; k>= oneFreq; k--){
                   dp[j][k] = Math.max(dp[j][k], dp[j-zeroFreq][k - oneFreq] + 1);
               }
           }
       }
        return dp[m][n];
    }    
    public void generateArr(String s, int arr[][], int index){       
            for(char c : s.toCharArray()){
                if(c== '0'){
                    arr[index][0]++;
                }else if(c == '1'){
                    arr[index][1]++;
                }
            }     
    }
}