class Solution {
    public int maxProduct(String[] words) {
        int res = 0, len = words.length, state[] = new int[len];
        int indx = 0;
        for(String s : words){
            state[indx++] = getState(s);
        }
        for(int i = 0; i<words.length; i++){
            for(int j = i+1; j<words.length; j++){
                if((state[i] & state[j]) == 0){
                    res = Math.max(res, (words[i].length() * words[j].length()));
                }
            }
        }
        return res;
    }
    public int getState(String s){
        int state = 0;
        for(char c : s.toCharArray()){
            int index = c - 'a';
            state = state | (1<<index);
        }
        return state;
    } 
}
-------------------------------
class Solution {
    public int maxProduct(String[] words) {
        int res = 0;
        for(int i = 0; i<words.length; i++){
            for(int j = i+1; j<words.length; j++){
                HashSet<Character> set = new HashSet<>();
                String w1 = words[i];
                String w2 = words[j];
                for(char ch : w1.toCharArray()){
                    set.add(ch);
                }
                boolean flag = true;
                for(char ch : w2.toCharArray()){
                    if(set.contains(ch)){
                        flag = false;
                        break;
                    }
                }
                if(flag){
                    res = Math.max(res, (w1.length() * w2.length()));
                }
            }
        }
        return res;
    }
}