/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> getAllElements(TreeNode root1, TreeNode root2) {
        if(root1 == null && root2 == null)
        {
            List<Integer> res = new ArrayList<>();
            return res;
        }
        ArrayList<Integer> al1 = new ArrayList<>();
        ArrayList<Integer> al2 = new ArrayList<>();
        makeList(root1, al1);
        makeList(root2, al2);
        for(int x : al2){
            al1.add(x);
        }
        Collections.sort(al1);
        List<Integer> res = al1;
        return res;
    }
    public void makeList(TreeNode root, ArrayList<Integer> al){
        if(root == null){
            return;
        }
        makeList(root.left, al);
        al.add(root.val);
        makeList(root.right, al);
    }
}