class Solution {
    public int superpalindromesInRange(String left, String right) {
       long start = Long.valueOf(left);
        long end = Long.valueOf(right);
        int count = 0;
//         find the even palindromes
        for(int i = 1; i<100000; i++){
            StringBuilder sb = new StringBuilder(Integer.toString(i));
            for(int j = sb.length() - 1; j>=0; j--){
                sb.append(sb.charAt(j));
            }
            Long n = Long.valueOf(sb.toString());
            n *= n;
            if(n > end){break;}
            if(n >= start && isPalindrome(n)){
                count++;
            }
        }
//         find the odd palindromes
        for(int i = 1; i<100000; i++){
            StringBuilder sb = new StringBuilder(Integer.toString(i));
            for(int j = sb.length() - 2; j>=0; j--){
                sb.append(sb.charAt(j));
            }
            Long n = Long.valueOf(sb.toString());
            n *= n;
            if(n > end){break;}
            if(n >= start && isPalindrome(n)){
                count++;
            }
        }
        return count;
    }
    public boolean isPalindrome(long num){
        long temp = num;
        long rev = 0;
        while(num>0){
            rev = rev * 10 + (num%10);
            num /= 10;
        }
        return temp == rev;
    }
}