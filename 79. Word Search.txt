class Solution {
    public boolean exist(char[][] board, String word) {
        boolean res = false;
        for(int r =0; r<board.length; r++){
            for(int c = 0; c<board[0].length; c++){
                if(board[r][c] == word.charAt(0)){
                   res = res || dfs(board,r, c, word, 0);
                }
            }
        }
        return res;
    }
    // int dirs[][] = {{0,1},{1,0},{-1, 0},{0, -1}};
    public boolean dfs(char board[][],int r, int c, String word, int count){
         if(count == word.length()){
            return true;
        }
        if(r < 0 || r>= board.length || c<0 || c>= board[0].length || board[r][c] != word.charAt(count)){
            return false;
        }
       
        char ch = board[r][c];
        board[r][c] = ' ';
        boolean res = dfs(board, r+1, c, word, count+1) ||
        dfs(board, r-1, c, word, count+1) ||
        dfs(board, r, c-1, word, count+1) ||
        dfs(board, r, c+1, word, count+1);
    
         board[r][c] = ch;
        return res;
    }
}