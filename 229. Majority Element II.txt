class Solution {
    public List<Integer> majorityElement(int[] nums) {
        HashMap<Integer, Integer> hmap = new HashMap<>();
        for(int x : nums){
            hmap.put(x , hmap.getOrDefault(x, 0)+1);
        }
        int n = nums.length/3;
        List<Integer> al =new ArrayList<>();
        for(int x : hmap.keySet()){
            if(hmap.get(x) > n){
                al.add(x);
            }
        }
        Collections.sort(al);
        return al;
    }
}
-----------------------
class Solution {
    public List<Integer> majorityElement(int[] nums) {
        
        int num1 = 0;
        int num2 = 0;
        
        int c1 = 0;
        int c2 = 0;
        // [8,8,7,7,7]
        for(int num : nums) {
            if(num1==num) {
                c1++;
                continue;
            }
            if(num2==num) {
                c2++;
                continue;
            }
            if(c1==0) {
                num1 = num;
                c1++;
                continue;
            }
            if(c2==0) {
                num2 = num;
                c2++;
                continue;
            }
            
            
            c1--;
            c2--;
            
        }
        
        c1 = 0;
        c2 = 0;
        
        for(int num : nums) {
            if(num==num1) {
                c1++;
            } else if(num==num2) {
                c2++;
            }
        }
        
        ArrayList<Integer> result = new ArrayList<>();
        
        if(c1>nums.length/3) {
            result.add(num1);
        }
        
        if(c2>nums.length/3) {
            result.add(num2);
        }
        
        return result;
    }
}