class Solution {
    private int lisLen(int sD[], int n){
        int dp[] = new int[n], len = 0;
        for(var num : sD){
            int indx = Arrays.binarySearch(dp, 0, len, num);
            if(indx < 0){
                indx = -(indx + 1);
            }
            dp[indx] = num;
            if(indx == len){
                len++;
            }
        }
        return len;
    }
    public int maxEnvelopes(int[][] env) {
        Arrays.sort(env, (a, b)->{
            if(a[0] != b[0]){
                return a[0] -b[0];
            }else{
                return b[1] - a[1];
            }
        });
        int len = env.length, sD[] = new int[len], indx = 0;
        for(var en : env){
            sD[indx++] = en[1];
        }
        return lisLen(sD, len);
    }
}
